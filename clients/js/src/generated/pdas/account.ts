/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  getAddressEncoder,
  getOptionEncoder,
  getProgramDerivedAddress,
  getU64Encoder,
  type Address,
  type OptionOrNullable,
  type ProgramDerivedAddress,
} from '@solana/web3.js';

export type AccountSeeds = {
  /** Funding account */
  from: Address;
  /** Slot for the address derivation */
  slot: number | bigint;
  /** Base public key for the account derivation */
  base: OptionOrNullable<Address>;
};

export async function findAccountPda(
  seeds: AccountSeeds,
  config: { programAddress?: Address | undefined } = {}
): Promise<ProgramDerivedAddress> {
  const {
    programAddress = 'LMSToZQenurAeAutm239hcJBCgsaPNaJhNC7nJhrtdB' as Address<'LMSToZQenurAeAutm239hcJBCgsaPNaJhNC7nJhrtdB'>,
  } = config;
  return await getProgramDerivedAddress({
    programAddress,
    seeds: [
      getAddressEncoder().encode(seeds.from),
      getU64Encoder().encode(seeds.slot),
      getOptionEncoder(getAddressEncoder(), { prefix: null }).encode(
        seeds.base
      ),
    ],
  });
}
